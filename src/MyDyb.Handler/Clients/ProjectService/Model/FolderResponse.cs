/*
 * MyDub.Projects
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace MyDyb.Handler.Clients.ProjectService.Model
{
    /// <summary>
    /// FolderResponse
    /// </summary>
    [DataContract(Name = "FolderResponse")]
    public partial class FolderResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FolderResponse" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="path">path.</param>
        /// <param name="previousPath">previousPath.</param>
        /// <param name="children">children.</param>
        /// <param name="projects">projects.</param>
        public FolderResponse(long id = default(long), string path = default(string), string previousPath = default(string), List<FolderInfo> children = default(List<FolderInfo>), List<ProjectInfo> projects = default(List<ProjectInfo>))
        {
            this.Id = id;
            this.Path = path;
            this.PreviousPath = previousPath;
            this.Children = children;
            this.Projects = projects;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [DataMember(Name = "path", EmitDefaultValue = false)]
        public string Path { get; set; }

        /// <summary>
        /// Gets or Sets PreviousPath
        /// </summary>
        [DataMember(Name = "previousPath", EmitDefaultValue = false)]
        public string PreviousPath { get; set; }

        /// <summary>
        /// Gets or Sets Children
        /// </summary>
        [DataMember(Name = "children", EmitDefaultValue = false)]
        public List<FolderInfo> Children { get; set; }

        /// <summary>
        /// Gets or Sets Projects
        /// </summary>
        [DataMember(Name = "projects", EmitDefaultValue = false)]
        public List<ProjectInfo> Projects { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FolderResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  PreviousPath: ").Append(PreviousPath).Append("\n");
            sb.Append("  Children: ").Append(Children).Append("\n");
            sb.Append("  Projects: ").Append(Projects).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
