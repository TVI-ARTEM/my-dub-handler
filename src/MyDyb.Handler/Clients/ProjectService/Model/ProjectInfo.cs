/*
 * MyDub.Projects
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace MyDyb.Handler.Clients.ProjectService.Model
{
    /// <summary>
    /// ProjectInfo
    /// </summary>
    [DataContract(Name = "ProjectInfo")]
    public partial class ProjectInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProjectInfo" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="mediaId">mediaId.</param>
        /// <param name="processing">processing.</param>
        /// <param name="segments">segments.</param>
        /// <param name="modifiedAt">modifiedAt.</param>
        public ProjectInfo(long id = default(long), string name = default(string), string mediaId = default(string), bool processing = default(bool), List<SegmentInfo> segments = default(List<SegmentInfo>), DateTime modifiedAt = default(DateTime))
        {
            this.Id = id;
            this.Name = name;
            this.MediaId = mediaId;
            this.Processing = processing;
            this.Segments = segments;
            this.ModifiedAt = modifiedAt;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets MediaId
        /// </summary>
        [DataMember(Name = "mediaId", EmitDefaultValue = false)]
        public string MediaId { get; set; }

        /// <summary>
        /// Gets or Sets Processing
        /// </summary>
        [DataMember(Name = "processing", EmitDefaultValue = true)]
        public bool Processing { get; set; }

        /// <summary>
        /// Gets or Sets Segments
        /// </summary>
        [DataMember(Name = "segments", EmitDefaultValue = false)]
        public List<SegmentInfo> Segments { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedAt
        /// </summary>
        [DataMember(Name = "modifiedAt", EmitDefaultValue = false)]
        public DateTime ModifiedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProjectInfo {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  MediaId: ").Append(MediaId).Append("\n");
            sb.Append("  Processing: ").Append(Processing).Append("\n");
            sb.Append("  Segments: ").Append(Segments).Append("\n");
            sb.Append("  ModifiedAt: ").Append(ModifiedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
