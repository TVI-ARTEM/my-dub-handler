/*
 * MyDub.Projects
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace MyDyb.Handler.Clients.ProjectService.Model
{
    /// <summary>
    /// SegmentInfo
    /// </summary>
    [DataContract(Name = "SegmentInfo")]
    public partial class SegmentInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SegmentInfo" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="startMs">startMs.</param>
        /// <param name="endMs">endMs.</param>
        /// <param name="speaker">speaker.</param>
        /// <param name="transcribe">transcribe.</param>
        /// <param name="translationRu">translationRu.</param>
        /// <param name="accentRu">accentRu.</param>
        /// <param name="audioMediaId">audioMediaId.</param>
        /// <param name="trueDub">trueDub.</param>
        /// <param name="externalRefId">externalRefId.</param>
        public SegmentInfo(string id = default(string), int startMs = default(int), int endMs = default(int), int speaker = default(int), string transcribe = default(string), string translationRu = default(string), string accentRu = default(string), string audioMediaId = default(string), bool trueDub = default(bool), string externalRefId = default(string))
        {
            this.Id = id;
            this.StartMs = startMs;
            this.EndMs = endMs;
            this.Speaker = speaker;
            this.Transcribe = transcribe;
            this.TranslationRu = translationRu;
            this.AccentRu = accentRu;
            this.AudioMediaId = audioMediaId;
            this.TrueDub = trueDub;
            this.ExternalRefId = externalRefId;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets StartMs
        /// </summary>
        [DataMember(Name = "startMs", EmitDefaultValue = false)]
        public int StartMs { get; set; }

        /// <summary>
        /// Gets or Sets EndMs
        /// </summary>
        [DataMember(Name = "endMs", EmitDefaultValue = false)]
        public int EndMs { get; set; }

        /// <summary>
        /// Gets or Sets Speaker
        /// </summary>
        [DataMember(Name = "speaker", EmitDefaultValue = false)]
        public int Speaker { get; set; }

        /// <summary>
        /// Gets or Sets Transcribe
        /// </summary>
        [DataMember(Name = "transcribe", EmitDefaultValue = false)]
        public string Transcribe { get; set; }

        /// <summary>
        /// Gets or Sets TranslationRu
        /// </summary>
        [DataMember(Name = "translationRu", EmitDefaultValue = false)]
        public string TranslationRu { get; set; }

        /// <summary>
        /// Gets or Sets AccentRu
        /// </summary>
        [DataMember(Name = "accentRu", EmitDefaultValue = false)]
        public string AccentRu { get; set; }

        /// <summary>
        /// Gets or Sets AudioMediaId
        /// </summary>
        [DataMember(Name = "audioMediaId", EmitDefaultValue = false)]
        public string AudioMediaId { get; set; }

        /// <summary>
        /// Gets or Sets TrueDub
        /// </summary>
        [DataMember(Name = "trueDub", EmitDefaultValue = true)]
        public bool TrueDub { get; set; }

        /// <summary>
        /// Gets or Sets ExternalRefId
        /// </summary>
        [DataMember(Name = "externalRefId", EmitDefaultValue = false)]
        public string ExternalRefId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SegmentInfo {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  StartMs: ").Append(StartMs).Append("\n");
            sb.Append("  EndMs: ").Append(EndMs).Append("\n");
            sb.Append("  Speaker: ").Append(Speaker).Append("\n");
            sb.Append("  Transcribe: ").Append(Transcribe).Append("\n");
            sb.Append("  TranslationRu: ").Append(TranslationRu).Append("\n");
            sb.Append("  AccentRu: ").Append(AccentRu).Append("\n");
            sb.Append("  AudioMediaId: ").Append(AudioMediaId).Append("\n");
            sb.Append("  TrueDub: ").Append(TrueDub).Append("\n");
            sb.Append("  ExternalRefId: ").Append(ExternalRefId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
